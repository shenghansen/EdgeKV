// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/HttpService.proto
// Protobuf C++ Version: 5.26.0-rc3

#include "utill/HttpService.pb.h"

#include "google/protobuf/descriptor.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/wire_format_lite.h"
#include <algorithm>
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
template <typename>
PROTOBUF_CONSTEXPR HttpResponse::HttpResponse(::_pbi::ConstantInitialized) {}
struct HttpResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HttpResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~HttpResponseDefaultTypeInternal() {}
  union {
    HttpResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HttpResponseDefaultTypeInternal
        _HttpResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR HttpRequest::HttpRequest(::_pbi::ConstantInitialized) {}
struct HttpRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HttpRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~HttpRequestDefaultTypeInternal() {}
  union {
    HttpRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HttpRequestDefaultTypeInternal
        _HttpRequest_default_instance_;
static ::_pb::Metadata file_level_metadata_proto_2fHttpService_2eproto[2];
static constexpr const ::_pb::EnumDescriptor *
    *file_level_enum_descriptors_proto_2fHttpService_2eproto = nullptr;
static const ::_pb::ServiceDescriptor
    *file_level_service_descriptors_proto_2fHttpService_2eproto[1];
const ::uint32_t TableStruct_proto_2fHttpService_2eproto::offsets
    [] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        ~0u, // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::HttpRequest, _internal_metadata_),
        ~0u, // no _extensions_
        ~0u, // no _oneof_case_
        ~0u, // no _weak_field_map_
        ~0u, // no _inlined_string_donated_
        ~0u, // no _split_
        ~0u, // no sizeof(Split)
        ~0u, // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::HttpResponse, _internal_metadata_),
        ~0u, // no _extensions_
        ~0u, // no _oneof_case_
        ~0u, // no _weak_field_map_
        ~0u, // no _inlined_string_donated_
        ~0u, // no _split_
        ~0u, // no sizeof(Split)
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::HttpRequest)},
        {8, -1, -1, sizeof(::HttpResponse)},
};
static const ::_pb::Message *const file_default_instances[] = {
    &::_HttpRequest_default_instance_._instance,
    &::_HttpResponse_default_instance_._instance,
};
const char descriptor_table_protodef_proto_2fHttpService_2eproto
    [] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        "\n\027proto/HttpService.proto\"\r\n\013HttpRequest"
        "\"\016\n\014HttpResponse2y\n\013HttpService\022\"\n\003Get\022\014"
        ".HttpRequest\032\r.HttpResponse\022\"\n\003Put\022\014.Htt"
        "pRequest\032\r.HttpResponse\022\"\n\003Del\022\014.HttpReq"
        "uest\032\r.HttpResponseB\003\200\001\001b\006proto3"};
static ::absl::once_flag descriptor_table_proto_2fHttpService_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_proto_2fHttpService_2eproto = {
    false,
    false,
    192,
    descriptor_table_protodef_proto_2fHttpService_2eproto,
    "proto/HttpService.proto",
    &descriptor_table_proto_2fHttpService_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_proto_2fHttpService_2eproto::offsets,
    file_level_metadata_proto_2fHttpService_2eproto,
    file_level_enum_descriptors_proto_2fHttpService_2eproto,
    file_level_service_descriptors_proto_2fHttpService_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable *
descriptor_table_proto_2fHttpService_2eproto_getter() {
  return &descriptor_table_proto_2fHttpService_2eproto;
}
// ===================================================================

class HttpRequest::_Internal {
public:
};

HttpRequest::HttpRequest(::google::protobuf::Arena *arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:HttpRequest)
}
HttpRequest::HttpRequest(::google::protobuf::Arena *arena,
                         const HttpRequest &from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  HttpRequest *const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:HttpRequest)
}

::google::protobuf::Metadata HttpRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fHttpService_2eproto_getter,
      &descriptor_table_proto_2fHttpService_2eproto_once,
      file_level_metadata_proto_2fHttpService_2eproto[0]);
}
// ===================================================================

class HttpResponse::_Internal {
public:
};

HttpResponse::HttpResponse(::google::protobuf::Arena *arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:HttpResponse)
}
HttpResponse::HttpResponse(::google::protobuf::Arena *arena,
                           const HttpResponse &from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  HttpResponse *const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:HttpResponse)
}

::google::protobuf::Metadata HttpResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fHttpService_2eproto_getter,
      &descriptor_table_proto_2fHttpService_2eproto_once,
      file_level_metadata_proto_2fHttpService_2eproto[1]);
}
// ===================================================================

const ::google::protobuf::ServiceDescriptor *HttpService::descriptor() {
  ::google::protobuf::internal::AssignDescriptors(
      &descriptor_table_proto_2fHttpService_2eproto);
  return file_level_service_descriptors_proto_2fHttpService_2eproto[0];
}

const ::google::protobuf::ServiceDescriptor *HttpService::GetDescriptor() {
  return descriptor();
}

void HttpService::Get(::google::protobuf::RpcController *controller,
                      const ::HttpRequest *, ::HttpResponse *,
                      ::google::protobuf::Closure *done) {
  controller->SetFailed("Method Get() not implemented.");
  done->Run();
}
void HttpService::Put(::google::protobuf::RpcController *controller,
                      const ::HttpRequest *, ::HttpResponse *,
                      ::google::protobuf::Closure *done) {
  controller->SetFailed("Method Put() not implemented.");
  done->Run();
}
void HttpService::Del(::google::protobuf::RpcController *controller,
                      const ::HttpRequest *, ::HttpResponse *,
                      ::google::protobuf::Closure *done) {
  controller->SetFailed("Method Del() not implemented.");
  done->Run();
}

void HttpService::CallMethod(const ::google::protobuf::MethodDescriptor *method,
                             ::google::protobuf::RpcController *controller,
                             const ::google::protobuf::Message *request,
                             ::google::protobuf::Message *response,
                             ::google::protobuf::Closure *done) {
  ABSL_DCHECK_EQ(method->service(),
                 file_level_service_descriptors_proto_2fHttpService_2eproto[0]);
  switch (method->index()) {
  case 0:
    Get(controller,
        ::google::protobuf::internal::DownCast<const ::HttpRequest *>(request),
        ::google::protobuf::internal::DownCast<::HttpResponse *>(response),
        done);
    break;
  case 1:
    Put(controller,
        ::google::protobuf::internal::DownCast<const ::HttpRequest *>(request),
        ::google::protobuf::internal::DownCast<::HttpResponse *>(response),
        done);
    break;
  case 2:
    Del(controller,
        ::google::protobuf::internal::DownCast<const ::HttpRequest *>(request),
        ::google::protobuf::internal::DownCast<::HttpResponse *>(response),
        done);
    break;

  default:
    ABSL_LOG(FATAL) << "Bad method index; this should never happen.";
    break;
  }
}

const ::google::protobuf::Message &HttpService::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor *method) const {
  ABSL_DCHECK_EQ(method->service(), descriptor());
  switch (method->index()) {
  case 0:
    return ::HttpRequest::default_instance();
  case 1:
    return ::HttpRequest::default_instance();
  case 2:
    return ::HttpRequest::default_instance();

  default:
    ABSL_LOG(FATAL) << "Bad method index; this should never happen.";
    return *::google::protobuf::MessageFactory::generated_factory()
                ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message &HttpService::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor *method) const {
  ABSL_DCHECK_EQ(method->service(), descriptor());
  switch (method->index()) {
  case 0:
    return ::HttpResponse::default_instance();
  case 1:
    return ::HttpResponse::default_instance();
  case 2:
    return ::HttpResponse::default_instance();

  default:
    ABSL_LOG(FATAL) << "Bad method index; this should never happen.";
    return *::google::protobuf::MessageFactory::generated_factory()
                ->GetPrototype(method->output_type());
  }
}

HttpService_Stub::HttpService_Stub(::google::protobuf::RpcChannel *channel)
    : channel_(channel), owns_channel_(false) {}

HttpService_Stub::HttpService_Stub(
    ::google::protobuf::RpcChannel *channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
    : channel_(channel),
      owns_channel_(ownership ==
                    ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}

HttpService_Stub::~HttpService_Stub() {
  if (owns_channel_)
    delete channel_;
}

void HttpService_Stub::Get(::google::protobuf::RpcController *controller,
                           const ::HttpRequest *request,
                           ::HttpResponse *response,
                           ::google::protobuf::Closure *done) {
  channel_->CallMethod(descriptor()->method(0), controller, request, response,
                       done);
}
void HttpService_Stub::Put(::google::protobuf::RpcController *controller,
                           const ::HttpRequest *request,
                           ::HttpResponse *response,
                           ::google::protobuf::Closure *done) {
  channel_->CallMethod(descriptor()->method(1), controller, request, response,
                       done);
}
void HttpService_Stub::Del(::google::protobuf::RpcController *controller,
                           const ::HttpRequest *request,
                           ::HttpResponse *response,
                           ::google::protobuf::Closure *done) {
  channel_->CallMethod(descriptor()->method(2), controller, request, response,
                       done);
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {} // namespace protobuf
} // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::std::false_type _static_init_ PROTOBUF_UNUSED =
    (::_pbi::AddDescriptors(&descriptor_table_proto_2fHttpService_2eproto),
     ::std::false_type{});
#include "google/protobuf/port_undef.inc"
